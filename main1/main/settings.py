"""Django settings for main project.Generated by 'django-admin startproject' using Django 4.2.For more information on this file, seehttps://docs.djangoproject.com/en/4.2/topics/settings/For the full list of settings and their values, seehttps://docs.djangoproject.com/en/4.2/ref/settings/"""import osfrom datetime import timedeltafrom pathlib import Path# Build paths inside the project like this: BASE_DIR / 'subdir'.BASE_DIR = Path(__file__).resolve().parent.parent# Quick-start development settings - unsuitable for production# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/# SECURITY WARNING: keep the secret key used in production secret!SECRET_KEY = 'django-insecure-pau22)t1d^nz@$5*b=&%v0wsn3naw(yy#^$lw*bj$^0j7%q)x^'# SECURITY WARNING: don't run with debug turned on in production!DEBUG = TrueALLOWED_HOSTS = []AUTHENTICATION_BACKENDS = [    # Needed to login by username in Django admin, regardless of `allauth`    'django.contrib.auth.backends.ModelBackend',    # `allauth` specific authentication methods, such as login by e-mail    'allauth.account.auth_backends.AuthenticationBackend',]# Application definitionINSTALLED_APPS = [    'appointment.apps.AppointmentConfig',    'protect',    'accounts',    'sign',    'django.contrib.admin',    'django.contrib.auth',    'django.contrib.contenttypes',    'django.contrib.sessions',    'django.contrib.messages',    'django.contrib.staticfiles',    'django.contrib.sites',    'django.contrib.flatpages',    'fpages',    'simpleapp',    'django_filters',    'allauth',    'allauth.account',    'allauth.socialaccount',    # ... include the providers you want to enable:    'allauth.socialaccount.providers.google',]SITE_ID = 1MIDDLEWARE = [    'django.middleware.security.SecurityMiddleware',    'django.contrib.sessions.middleware.SessionMiddleware',    'django.middleware.common.CommonMiddleware',    'django.middleware.csrf.CsrfViewMiddleware',    'django.contrib.auth.middleware.AuthenticationMiddleware',    'django.contrib.messages.middleware.MessageMiddleware',    'django.middleware.clickjacking.XFrameOptionsMiddleware',    'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware']ROOT_URLCONF = 'main.urls'TEMPLATES = [    {        'BACKEND': 'django.template.backends.django.DjangoTemplates',        'DIRS': [os.path.join(BASE_DIR, 'templates')],        'APP_DIRS': True,        'OPTIONS': {            'context_processors': [                'django.template.context_processors.debug',                'django.template.context_processors.request',                'django.contrib.auth.context_processors.auth',                'django.contrib.messages.context_processors.messages',            ],        },    },]WSGI_APPLICATION = 'main.wsgi.application'# Database# https://docs.djangoproject.com/en/4.2/ref/settings/#databasesDATABASES = {    'default': {        'ENGINE': 'django.db.backends.sqlite3',        'NAME': BASE_DIR / 'db.sqlite3',    }}# Password validation# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validatorsAUTH_PASSWORD_VALIDATORS = [    {        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',    },    {        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',    },    {        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',    },    {        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',    },]# Internationalization# https://docs.djangoproject.com/en/4.2/topics/i18n/LANGUAGE_CODE = 'ru'TIME_ZONE = 'UTC'USE_I18N = TrueUSE_TZ = True# Static files (CSS, JavaScript, Images)# https://docs.djangoproject.com/en/4.2/howto/static-files/STATIC_URL = '/static/'# Default primary key field type# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-fieldDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'STATICFILES_DIRES = [BASE_DIR / 'static']LOGIN_URL = '/accounts/login/'ACCOUNT_EMAIL_REQUIRED = TrueACCOUNT_UNIQUE_EMAIL = TrueACCOUNT_USERNAME_REQUIRED = FalseACCOUNT_AUTHENTICATION_METHOD = 'email'ACCOUNT_EMAIL_VERIFICATION = 'none'ACCOUNT_FORMS = {'signup': 'sign.models.BasicSignupForm'}ADMINS = [    ('Skavik', 'skavik46111@gmail.com'),    # список всех админов в формате ('имя', 'их почта')]SERVER_EMAIL = 'peterbadson@yandex.ru'  # это будет у нас вместо аргумента FROM в массовой рассылкеEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'EMAIL_HOST = 'smtp.yandex.ru'  # адрес сервера Яндекс-почты для всех один и тот жеEMAIL_PORT = 465  # порт smtp сервера тоже одинаковыйEMAIL_HOST_USER = 'TMVPOWER'  # ваше имя пользователя, например, если ваша почта user@yandex.ru, то сюда надо писать user, иными словами, это всё то что идёт до собакиEMAIL_HOST_PASSWORD = 'tmv112327'  # пароль от почтыEMAIL_USE_SSL = True  # Яндекс использует ssl, подробнее о том, что это, почитайте в дополнительных источниках, но включать его здесь обязательноDEFAULT_FROM_EMAIL = EMAIL_HOST_USERCELERY_BEAT_SCHEDULE = {    'send_weekly_newsletter': {        'task': 'simpleapp.views.send_weekly_newsletter',        'schedule': timedelta(weeks=1),  # Задаем периодичность выполнения (1 неделя)    },}